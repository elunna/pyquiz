Force filesystem check after reboot by adding a file to the root. :: sudo touch /forcefsck

View wireless network configuration :: iwconfig
View or configure network interface and IP configuration :: ifconfig

Create an uncompressed tar "zip" from "files" :: tar cf zip files 
Create a bzip compressed tar "zip" from "files" ::tar cjf zip files 
Create a gzip compressed tar "zip" from "files" :: tar czf zip files 
Add a file to existing "zip"(verbose). :: tar rvf zip file 
List the contents of a tar named "zip":: tar tvf zip
Unzip a general compressed "zip". :: tar xf zip

Synchronize the contents of dir2 to dir2, recursively. :: rsync -a --delete dir1 dir2/
Simulate an rsync of dir2 to dir1. :: rsync -nv --delete dir1/ dir2/
Synchronize the contents of dir2 to dir1. :: rsync --delete dir1/ dir2/ 

Go back to last used directory :: cd - 
Go to the home directory. :: cd ~
Go to the root directory. :: cd / 
Go up a directory :: cd .. 

List man page for "cmd" :: man cmd

Print name of current working directory :: pwd

Move your home directory to a black hole. :: mv ~ /dev/null 
Move file "x" to "y", with interactive warning :: mv -i x y 
Move file "x" to "y", overwrite older. :: mv -u x y 
Move file "x" to "y" :: mv x y 

Copy file "x" to "y", with interactive warning :: cp -i x y
Copy directory "x" to "y" recursively :: cp -r x y 
Copy file "x" to "y", only overwrite if source is newer. :: cp -u x y
Copy file "x" to "y" :: cp x y

Delete all files in current directory. :: rm * 
Delete specified "file" :: rm file 
Delete specific "file", with warning :: rm -i file 
Recursively delete all files and directories from "dir" :: rm -r dir 
Remove directory "d" if it's empty. :: rmdir d 

Create a new directory "d" :: mkdir d 

Kill all process named "proc"* :: killall proc 
Kill process with "PID" :: kill PID 
Kill a graphical program. :: xkill

Shutdown now and force a filesystem check during reboot.(not tested) :: shutdown -Fr now 
Shutdown the computer immediately :: shutdown -h now 
Shutdown after 10 minutes :: shutdown -h 10 
Restart the computer immediately:: shutdown -r now 
Restart the computer in 10 minutes:: shutdown -r 10
Cancel a running shutdown :: shutdown -c

Install package "pkg" :: apt-get install pkg
Completely remove "pkg" and associated config files. :: apt-get purge package 
Remove "pkg" (but keep config files) :: apt-get remove pkg 
Update all packages and source list. :: apt-get update 
Upgrade all installed packages :: apt-get upgrade 
Fix broken packages. :: apt-get -f install 

Install a "pkg" via RPM :: dnf install pkg
Install a "pkg" via RPM(say yes automatically) :: dnf -y install pkg
Install updates via RPM :: dnf update
Remove a "pkg" via RPM :: dnf remove pkg
Get info on "pkg" via RPM :: dnf info pkg
List all installed packages via RPM :: dnf list installed

List files with inode numbers :: ls -i 
List by size :: ls -lS 
Search directory for a filename with "word" in it. :: ls | grep word 
Search the command history for "test" :: history | grep test 
List alphabetically by extension :: ls -lX 
List in reverse :: ls -r 
List recursively :: ls -R
List by time modified :: ls -lt 
List files in one column. :: ls -1 
List the number of files in the current directory :: ls -A | wc 
List files in long format. :: ls -l

Display "file" in a nice pager(older version) :: more file
Display "file" in a nice pager(better version) :: less file

Perform "cmd" with superuser privilege. :: sudo cmd
Make sudo forget your password :: sudo -k
Switch the root user account. :: su

Give executable permission to all users :: chmod a+x 
Give executable permission to user. :: chmod u+x 
Give executable permission to group. :: chmod g+x 
Give executable permission to others. :: chmod o+x 

Remove executable permission from all users :: chmod a-x 
Remove executable permission from user. :: chmod u-x 
Remove executable permission from group. :: chmod g-x 
Remove executable permission from others. :: chmod o-x 

Make file "b" have the same permissions as file "a" :: chmod --reference=a b

Apply read permission for group recursively under "dir" :: chmod -R g+r dir

All users permissions :: a
Group permissions :: g
Other users permissions :: o
User permissions :: u

No permissions :: 0
Execute permissions :: 1
Write permissions :: 2
Write and execute permissions :: 3
Read permissions :: 4
Read and execute permissions :: 5
Read and write permissions :: 6
Read, write, and execute permissions :: 7

Change the owner of all files to "bob" :: chown bob *
Change the owner of "file" to "bob" :: chown bob file
Change all files to group "fish", owner "bob" :: chown bob.fish *

Change the password of your account. :: passwd
Change the password of account "bob"(when root). :: passwd bob
Change the password of group "fish". :: passwd -g fish

View processes running for current login session. :: ps
View all processes running for all users. :: ps -e
Print a process tree. :: pstree

Visual editor :: vi

Create disk image from "/dev/sda" to image "image.img" :: dd if=/dev/sda of=image.img
Restore disk image from "image.img" to image "/dev/sda":: dd if=image.img of=/dev/sda 
